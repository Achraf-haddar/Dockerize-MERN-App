# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  imageBackend: api-server
  imageFront: react-app
  
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:    
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker-Registery'
        repository: 'melkeor/$(imageBackend)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/backend/Dockerfile'
        tags: | 
          $(tag)
          
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker-Registery'
        repository: 'melkeor/$(imageFront)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/frontend/ProdEnv/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)/frontend/'
        tags: | 
          $(tag)
          
    
    
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
    
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'k8sdev.default'
    pool: 
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(Pipeline.Workspace)/manifests'
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/manifests/mongodb-pod.yml
                $(Pipeline.Workspace)/manifests/mongodb-service.yml

                $(Pipeline.Workspace)/manifests/backEnd-service.yml
                $(Pipeline.Workspace)/manifests/backEnd-deployment.yml
                
                $(Pipeline.Workspace)/manifests/frontEnd-service.yml
                $(Pipeline.Workspace)/manifests/frontEnd-deployment.yml
              containers: |
                melkeor/$(imageBackend):$(tag)
                melkeor/$(imageFront):$(tag)
